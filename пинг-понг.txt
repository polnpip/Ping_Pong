from pygame import *
from random import randint

class GameSprite(sprite.Sprite):
  def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        sprite.Sprite.__init__(self)
        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.speed = player_speed
      #каждый спрайт должен хранить свойство rect - прямоугольник, в который он вписан
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y

  def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))


class Player(GameSprite):
   def update_r(self):
        keys = key.get_pressed()
        if keys[K_UP] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_DOWN] and self.rect.y < win_height - 80:
            self.rect.y += self.speed
   def update_l(self):
        keys = key.get_pressed()
        if keys[K_w] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_s] and self.rect.y < win_height - 80:
            self.rect.y += self.speed

win_width = 700
win_height = 500
window = display.set_mode((win_width, win_height))
display.set_caption = ('Пинг-Понг')
background = transform.scale(image.load('background.jpg'), (700, 500))

run = True
finish = False
clock = time.Clock()           
FPS = 60

player1 = Player(('racket.png'), win_height - 500, 4, 5)
player2 = Player(('racket.png'), win_width - 80, 120, 2)
ball = GameSprite(('ball.png'), win_width - 120, win_height - 100, 2)

font.init()
font2 = font.Font(None, 35)
lose1 = font.render('PLAYER 1 LOSE!', True, (180, 0, 0))
lose2 = font.render('PLAYER 2 LOSE!', True, (180, 0, 0))

speed_x = 3
speed_y = 3

while run:
    for e in event.get():
        if e.type == QUIT:
            run = False

    if finish != True:
        window.fill(back)
        player1.update_l()
        player2.update_r()
        ball.rect.x += speed_x
        ball.rect.y += speed_y

    if sprite.collide_rect(player1, ball) or sprite.collide_rect(player2, ball):
        speed_x *= -1

    if ball.rect.y > win_height-50 or ball.rect.y < 0
        speed_x *= -1
      
    if ball.rect.x < 0:
        finish = True
        window.blit(lose1, (200, 200))
        
    if ball.rect.x > win_width:
        finish = True
        window.blit(lose2, (200, 200))
      
    player1.reset()
    monster2.reset()
    ball.reset()

display.update()
clock.tick(FPS)
